import { useEffect, useState } from 'react';

import { Button, Container, Flex, Text } from '@chakra-ui/react';
import { GetServerSideProps } from 'next';
import dynamic from 'next/dynamic';
import { Inter } from 'next/font/google';
import Head from 'next/head';

import styles from '@/pages/Home.module.css';
import PostService, { IPostData } from '@/services/PostService';
import { useDefaultView } from '@/stores/useDefaultViewStore';

const inter = Inter({ subsets: ['latin'] });

const ArtifactCard = dynamic(() =>
  import('@/components/SideDrawer').then((res) => res.ArtifactCard)
);

interface IProps {
  posts: IPostData[];
}

export default function Home({ posts }: IProps) {
  //Store Usage Sample
  const defaultView = useDefaultView();

  const [selectedPost, setSelectedPost] = useState<IPostData[]>([]);

  const handleClickPost = async (id: number) => {
    const data = await PostService.getById(id);
    setSelectedPost(posts.filter((post: IPostData) => data.id === post.id));
  };

  useEffect(() => {
    console.log(defaultView);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
        <Text fontWeight={'bold'}>Posts</Text>
        {posts.map((post: IPostData) => (
          <Container key={post.id}>
            <Flex
              textAlign={'left'}
              alignItems={'center'}
              justifyContent={'space-between'}
            >
              <Text>{post.title}</Text>
              <Button
                variant={'primary'}
                size={'sm'}
                onClick={() => handleClickPost(post.id)}
              >
                Click
              </Button>
            </Flex>
          </Container>
        ))}
        {selectedPost.length > 0 ? (
          <ArtifactCard selectedPost={selectedPost} />
        ) : null}
      </main>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async () => {
  const posts = await PostService.getAll();
  console.log('SERVER', posts);
  return {
    props: { posts },
  };
};
